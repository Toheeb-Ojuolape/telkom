{"remainingRequest":"C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\src\\store\\index.js","mtime":1624870306741},{"path":"C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\TOHEEB\\Documents\\GitHub\\telkom-verify\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/TOHEEB/Documents/GitHub/telkom-verify/src/store/index.js"],"names":["Vue","Vuex","axios","use","pushResult","phone","nin","selfie","score","success","body","telephone","selfie_photo","entries","post","headers","Accept","SERVICEID","then","response","console","log","data","catch","err","getConfidence","id","callback","parseSelfie","split","user_id","status","confidenceLevel","responseData","ResponseData","parseFloat","confidenceValue","finally","setTimeout","store","Store","state","pageNumber","otp","ninLookupFailed","ninLookupDone","ninResponse","otpValidationDone","mutations","nextPage","previousPage","gotoPage","page","otpValidated","otpFailedValidation","doneThings","setTelephone","setNin","setNinLookupFailed","setNinLookupDone","setNinData","setSelfie","base64","actions","context","commit","payload","saveSelfie","validateOTP","doingCheck","msisdn","getters","getTelephone","validate","Token","isNinLinked","isLinked","linked","generateOTP","fetchNin","get","getNin","getNinData","photo","getSelfie","getPageNumber","getOTP","isNinLookupFailed","isNinLookupDone","isOtpValidationDone","isOTPValid","Promise","resolve","r"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n// import formData from 'form-data'\r\n\r\nVue.use(Vuex);\r\n\r\nfunction pushResult(phone, nin, selfie, score, success) {\r\n  let body = {\r\n    telephone: phone,\r\n    nin: nin,\r\n    selfie_photo: selfie,\r\n    score: score,\r\n    success: success,\r\n    entries: true,\r\n  };\r\n\r\n  axios\r\n    .post(\"https://sqldb-utfb7.ondigitalocean.app/\", body, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"*/*\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        SERVICEID: \"728370\"\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(\"log\", response.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"log\", err);\r\n    });\r\n}\r\n\r\nfunction getConfidence(phone, nin, id, selfie, callback) {\r\n  let parseSelfie = selfie.split(',')\r\n  let body = {\r\n    id: id,\r\n    selfie: parseSelfie[1],\r\n    user_id: phone,\r\n  };\r\n\r\n  let status\r\n  let confidenceLevel\r\n\r\n  axios\r\n      .post(\"https://swiftend.com/verifySelfie/\", body, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"*/*\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          SERVICEID: \"728370\"\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const responseData = response.data.ResponseData\r\n        confidenceLevel = parseFloat(responseData.confidenceValue)\r\n        if (responseData.status && confidenceLevel >= 90.0) {\r\n          // match\r\n          status = true\r\n        } else {\r\n          status = false\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"log\", err);\r\n      }).finally(() => {\r\n        pushResult(phone, nin, 'data:,', confidenceLevel, status ? 1 : 0)\r\n        setTimeout(() => {\r\n          callback(status)\r\n        }, 1000)\r\n      });\r\n}\r\n\r\n// function enrollUser (uniqueNumber, imageString, fName, lastName) {\r\n//     let WebApi = require(\"smile-identity-core\");\r\n//     let partner_id = '';\r\n//     let api_key = ''; // Download your API key from the Smile Identity portal\r\n//     let sid_server = '0'; // Use '0' for the sandbox (test) server, use '1' for production server\r\n//     let connection = new WebApi(partner_id, '', api_key, sid_server);\r\n//     // Create required tracking parameters\r\n//     let partner_params = {\r\n//         user_id: 'swtend-' + uniqueNumber,\r\n//         job_id: Math.floor(100000000000 + Math.random() * 900000000000),\r\n//         // Job Type Integer 1 for jobs that compare a selfie to an ID,\r\n//         // 2 for authenticating a selfie against a previously registered user,\r\n//         // 4 for registering a user,\r\n//         // 8 for updating the enrolled photo\r\n//         job_type: 1\r\n//     };\r\n//     let image_details =  [\r\n//         {\r\n//             image_type_id: 3,\r\n//             image: imageString\r\n//         }\r\n//     ];\r\n//     let id_info = {\r\n//         first_name: fName,\r\n//         last_name: lastName,\r\n//         entered: 'true'\r\n//     };\r\n//     let options = {\r\n//         return_job_status: true,\r\n//         return_history: true,\r\n//         return_image_links: true\r\n//     };\r\n//     let response = connection.submit_job(partner_params, image_details, id_info, options)\r\n//     console.log('smileID response', response)\r\n// }\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    pageNumber: 1,\r\n    otp: null,\r\n    telephone: null,\r\n    nin: null,\r\n    ninLookupFailed: false,\r\n    ninLookupDone: false,\r\n    ninResponse: {},\r\n    selfie: null,\r\n    otpValidationDone: null\r\n  },\r\n  mutations: {\r\n    nextPage(state) {\r\n      state.pageNumber++;\r\n    },\r\n    previousPage(state) {\r\n      state.pageNumber--;\r\n    },\r\n    gotoPage(state, page) {\r\n      state.pageNumber = page;\r\n    },\r\n    // generateOTP(state) {\r\n    //   state.otp = Math.floor(100000 + Math.random() * 900000);\r\n    // },\r\n    otpValidated(state) {\r\n      state.otp = true;\r\n    },\r\n    otpFailedValidation(state) {\r\n      state.otp = false;\r\n    },\r\n    doneThings(state) {\r\n      state.otp = null;\r\n    },\r\n    setTelephone(state, phone) {\r\n      state.telephone = phone;\r\n    },\r\n    setNin(state, nin) {\r\n      state.nin = nin;\r\n    },\r\n    setNinLookupFailed(state) {\r\n      state.ninLookupFailed = true;\r\n    },\r\n    setNinLookupDone(state) {\r\n      state.ninLookupDone = true;\r\n    },\r\n    setNinData(state, data) {\r\n      state.ninResponse = data;\r\n    },\r\n    setSelfie(state, base64) {\r\n      state.selfie = base64;\r\n    },\r\n  },\r\n  actions: {\r\n    nextPage(context) {\r\n      context.commit(\"nextPage\");\r\n    },\r\n    previousPage(context) {\r\n      context.commit(\"previousPage\");\r\n    },\r\n    gotoPage(context, payload) {\r\n      context.commit(\"gotoPage\", payload);\r\n    },\r\n    saveSelfie(context, base64) {\r\n      context.commit(\"setSelfie\", base64);\r\n    },\r\n    doneThings(context) {\r\n      context.commit('doneThings')\r\n    },\r\n    validateOTP(context, payload) {\r\n      let doingCheck = false;\r\n      axios\r\n          .post(\r\n              \"https://sqldb-utfb7.ondigitalocean.app/sendotp/\",\r\n              {\r\n                msisdn: context.getters.getTelephone,\r\n                validate: true,\r\n                otp: payload.otp\r\n              },\r\n              {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  Accept: \"*/*\",\r\n                  Token: \"ygdjhkjasf34567sftx4yhgs5y6hb6\",\r\n                  \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n              }\r\n          )\r\n          .then((response) => {\r\n            console.log(\"validate-otp\", response.data);\r\n            if (response.data.status) {\r\n              context.commit('otpValidated')\r\n              doingCheck = true\r\n              // once OTP is validated successfully, then call endpoint to check if its an already linked customer\r\n              isNinLinked(context.getters.getTelephone).then((isLinked) => {\r\n                if (isLinked.linked) {\r\n                  context.commit('setNin', isLinked.nin)\r\n                  context.commit('gotoPage', -1) // go to a page that tells customers they are already linked\r\n                } else {\r\n                  context.commit('nextPage')\r\n                }\r\n              }).finally(() => {\r\n                context.state.otpValidationDone = true\r\n              })\r\n            } else {\r\n              context.commit('otpFailedValidation')\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"validate-otp\", err);\r\n          })\r\n          .finally(() => {\r\n            if (!doingCheck) {\r\n              context.state.otpValidationDone = true\r\n            }\r\n          });\r\n    },\r\n    generateOTP(context, payload) {\r\n      // context.commit(\"generateOTP\");\r\n      context.commit(\"setTelephone\", payload.phone);\r\n      // then call API to send OTP to phone\r\n      // const to = context.getters.getTelephone.substring(1);\r\n      axios\r\n        .post(\r\n          \"https://sqldb-utfb7.ondigitalocean.app/sendotp/\",\r\n          {\r\n            msisdn: context.getters.getTelephone,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"*/*\",\r\n              Token: \"ygdjhkjasf34567sftx4yhgs5y6hb6\",\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(\"send-otp\", response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"send-otp-error\", err);\r\n        });\r\n    },\r\n    fetchNin(context, payload) {\r\n      context.commit(\"setNin\", payload.nin);\r\n      axios\r\n        .get(\r\n          \"https://swiftend.com/verifynindemo/?regNo=\" + context.getters.getNin,\r\n          {\r\n            headers: {\r\n              SERVICEID: \"863152\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(\"nin-lookup\", '-');\r\n          if (response.data.ResponseData) {\r\n            // 95845306683\r\n            context.commit(\"setNinData\", response.data.ResponseData);\r\n            // then enrollUser\r\n            // let ninData = response.data.ResponseData\r\n            // enrollUser(ninData.telephoneno, ninData.photo, ninData.firstname, ninData.surname)\r\n            context.commit(\"setNin\", context.getters.getNinData.nin);\r\n            getConfidence(\r\n                context.getters.getTelephone,\r\n                context.getters.getNinData.nin,\r\n                context.getters.getNinData.photo,\r\n                context.getters.getSelfie,\r\n                function (status) {\r\n                  if (!status) {\r\n                    context.commit(\"setNinLookupFailed\");\r\n                  }\r\n                  context.commit(\"setNinLookupDone\");\r\n                }\r\n            )\r\n            // pushResult(\r\n            //   context.getters.getTelephone,\r\n            //   context.getters.getNin,\r\n            //   context.getters.getSelfie,\r\n            //   0,\r\n            //   0\r\n            // );\r\n          } else {\r\n            context.commit(\"setNinLookupFailed\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"nin-lookup\", err);\r\n          //context.commit(\"setNinLookupFailed\");\r\n        })\r\n    },\r\n  },\r\n  getters: {\r\n    getPageNumber: (state) => {\r\n      return state.pageNumber;\r\n    },\r\n    getOTP: (state) => {\r\n      return state.otp;\r\n    },\r\n    getTelephone: (state) => {\r\n      return state.telephone;\r\n    },\r\n    getNin: (state) => {\r\n      return state.nin;\r\n    },\r\n    getNinData: (state) => {\r\n      return state.ninResponse;\r\n    },\r\n    isNinLookupFailed: (state) => {\r\n      return state.ninLookupFailed;\r\n    },\r\n    isNinLookupDone: (state) => {\r\n      return state.ninLookupDone;\r\n    },\r\n    isOtpValidationDone: (state) => {\r\n      return state.otpValidationDone\r\n    },\r\n    isOTPValid: (state) => {\r\n      return state.otp\r\n    },\r\n    getSelfie: (state) => {\r\n      return state.selfie;\r\n    },\r\n  },\r\n});\r\n\r\nfunction isNinLinked (phone) {\r\n  return new Promise((resolve) => {\r\n    let r = {\r\n      linked: false,\r\n      nin: null,\r\n    }\r\n    axios\r\n        .post(\"https://sqldb-utfb7.ondigitalocean.app/\", {\r\n          validate: true,\r\n          msisdn: phone,\r\n        }, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"*/*\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            SERVICEID: \"728370\"\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.status !== \"404\") {\r\n            r.linked = true\r\n            r.nin = response.data.data\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"log\", err);\r\n        })\r\n        .finally(() => {\r\n          resolve(r)\r\n        });\r\n  });\r\n}\r\n\r\nexport default store;\r\n"]}]}